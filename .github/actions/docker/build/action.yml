name: Build Image
description: "Build a docker image"

inputs:
  image:
    description: "Name of the image to build"
    required: true
  tag:
    description: "Tag of the image to build"
    required: true
  context:
    description: "Path to the build context"
    required: true
  dockerfile:
    description: "Path to the Dockerfile"
    required: true
  cache-to:
    description: "Cache the image to this registry"
    required: false
  cache-from:
    description: "Cache the image from this registry"
    required: false 
  push:
    description: "Push the image to the registry"
    required: false


runs:
  using: composite
  steps:
    - name: Docker image build - motd
      shell: bash
      run: |
        echo "Docker image build "
        echo "# Name: ${{ inputs.image }}"
        echo "# Version: ${{ inputs.tag }}"
        echo "# Context: ${{ inputs.context }}"
        echo "# Dockerfile: ${{ inputs.dockerfile }}"
        echo "# Cache from: ${{ inputs.cache-from }}"
        echo "# Cache to: ${{ inputs.cache-to }}"
        echo "# Push: ${{ inputs.push }}" 

    - name: Create builder
      shell: bash
      env:
        DOCKER_CLI_EXPERIMENTAL: enabled
        DOCKER_BUILDKIT: "1"
        BUILDX_BUILDER: builder
        
      run: |
        docker buildx create --use --name builder
        docker buildx inspect --bootstrap
          continue-on-error: true
    - name: Docker image build
      shell: bash
      run: |
        docker buildx build --allow builder "${{ inputs.context }}" --tag ${{ inputs.image }}:${{ inputs.tag }} \
        $([[ -z "${{ inputs.cache-from }}" ]] || --cache-from ${{ inputs.cache-from }}) \
        $([[ -z "${{ inputs.cache-to }}" ]] || --cache-to ${{ inputs.cache-to }}) \
        --file ${{ inputs.dockerfile }} $([[ -z "${{ inputs.push }}" ]] || --push)